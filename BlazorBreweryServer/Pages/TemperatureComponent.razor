@using BlazorBrewery.BrewComputer.Manager;
@using System.Timers;
@implements IDisposable;

@if (!string.IsNullOrEmpty(_currentTemperature) && TemperatureManager != null)
{
    <div style="min-height:80px">
        <MudField Label="Temperatur" Variant="Variant.Outlined">
            <MudStack Justify="Justify.FlexStart" Row="true">
                <MudIcon Icon="@Icons.Material.Filled.DeviceThermostat" Color="@_deviceThermostatColor" Size="Size.Large" />
                <MudText Typo="@Typo.h6">@_currentTemperature</MudText>
            </MudStack>
        </MudField>
    </div>
}

@code {
    [Parameter]
    public ITemperatureManager? TemperatureManager { get; set; }
        
    private string? _currentTemperature;
    private Color _deviceThermostatColor = Color.Info;
    private Timer _timer = new(1000);
        
    protected override void OnInitialized()
    {
        _timer.Elapsed += (sender, eventArgs) => OnTimerCallback();
        _timer.Start();
    }

    private void SetDeviceThermostatColor(double currentTemperature)
    {
        if (currentTemperature > 0 && currentTemperature < 20)
        {
            _deviceThermostatColor = Color.Info;
        }
        else if (currentTemperature >= 20 && currentTemperature < 40)
        {
            _deviceThermostatColor = Color.Warning;
        }
        else if (currentTemperature >= 40 && currentTemperature < 60)
        {
            _deviceThermostatColor = Color.Secondary;
        }
        else if (currentTemperature >= 60)
        {
            _deviceThermostatColor = Color.Error;
        }
    }

    private void OnTimerCallback()
    {
        _ = InvokeAsync(async () =>
        {
            if (TemperatureManager == null) return;

            var _currentTemperatureDouble = await TemperatureManager.GetCurrentTemperature();
            _currentTemperature = _currentTemperatureDouble.ToString("N2") + " °C";
            SetDeviceThermostatColor(_currentTemperatureDouble);
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        _timer.Dispose();
    }
}